#import some libraries
import numpy as np
import pandas as pd
from lifelines import*
import seaborn as sns
import matplotlib.pyplot as plt


#Data
'''
Treatment: 1 = treated, 0= PLacebo
Time of remision in weeks : t
status : 1 = relapsed 0 = censored
ref = Reference Freireich et al. Blood 21(1963): 699-716.
Note: trial was conducted by matching pairs of patients by remission status, and randomizing with pairs 
to treatment or placebo. We ignore this pairing in our analysis.
'''
x=[0]
y=[1]

df=pd.DataFrame({'Treatment': 21*x+21*y,'t':[1,1,2,2,3,4,4,5,5,8,8,8,8,11,11,12,12,15,17,22,23,6,6
                                                 ,6,6,7,9,10,10,11,13,16,17,19,20,22,23,25,32,32,34,35],
                 'status':[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0]})
                 
 #EDA
 df.groupby('Treatment').mean()
pd.crosstab(df.Treatment,df.status)
pd.crosstab(df.status,df.Treatment,rownames=['status'],colnames=['Treatment'])
sns.heatmap([df.Treatment,df.status],cmap="YlGnBu", annot=True, cbar=False)
g=sns.FacetGrid(df,row="Treatment",col="status")
g.map(plt.hist,'status')
v=sns.FacetGrid(df,row='status',col='Treatment')
v.map(plt.hist,'t')
df.groupby('Treatment')['t'].plot()

mask=(df['Treatment']==1) & (df['status']==0)
mask1=(df['Treatment']==1) & (df['status']==1)
plt.figure()
df.groupby(['Treatment','status'])['t'].plot()

#Normality tests
from scipy import stats
def normal(col):
    statistic,p_value=stats.kstest(col,'norm')
    print('Statistics :{0}, p_value:{1}'.format(statistic,p_value))
    if p_value < 0.05:
        return  print('The distribution differs from normal')
    else:
        return  print('The distribution is normal')
normal(df[mask1]['t'])
normal(df[mask]['t'])

def skew_kurt(col):
    return print('The group  who received treatment and censored \n Skewness:{0} Kurtosis:{1}'.format(stats.skew(col),stats.kurtosis(col)))

skew_kurt(df[mask]['t'])
skew_kurt(df[mask1]['t'])




